# This is a basic workflow to help you get started with Actions

name: DEPLOY TO AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      DJAGNO_SECRET: ${{ secrets.DJAGNO_SECRET }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  # This workflow contains a single job called "build"
  build:
    needs: CI
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    if: success()
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: executing remote ssh commands using password
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script_stop: true
          script: |
            whoami
            ls -al
            cd Mudig_BE/
            /home/ubuntu/publish/pull_repository.sh

  # CI ÏÑ±Í≥µ Î©îÏÑ∏ÏßÄ Î∞úÏÜ°
  build-CI-Success:
    needs: CI
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Author: ${{github.actor}}
          
          Status: üòö **CI Success**
          
          Commit message: ${{ github.event.commits[0].message }}'

  # Î∞∞Ìè¨ ÏÑ±Í≥µ Î©îÏÑ∏ÏßÄ Î∞úÏÜ°
  build-Deploy-Success:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Author: ${{github.actor}}
          
          Status: üòö **Deploy Success**
          
          Commit message: ${{ github.event.commits[0].message }}
          
          [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}}) '

  # CI Ïã§Ìå® Î©îÏÑ∏ÏßÄ Î∞úÏÜ°
  build-CI-failure:
    needs: CI
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Author: ${{github.actor}}
          
          Status: üò≠ **CI failure**
          
          Commit message: ${{ github.event.commits[0].message }}
          
          [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}}) '

  # Î∞∞Ìè¨ Ïã§Ìå® Î©îÏÑ∏ÏßÄ Î∞úÏÜ°
  build-Deploy-failure:
    needs: build
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'Author: ${{github.actor}}
          
          Status: üò≠ **Deploy failure**
          
          Commit message: ${{ github.event.commits[0].message }}
          
          [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}}) '