# This is a basic workflow to help you get started with Actions

name: DEPLOY TO AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      DJAGNO_SECRET: ${{ secrets.DJAGNO_SECRET }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test

  # This workflow contains a single job called "build"
  build:
    needs: CI
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: executing remote ssh commands using password
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PEM_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script_stop: true
          script: |
            whoami
            ls -al
            cd Mudig_BE/
            /home/ubuntu/publish/pull_repository.sh
  # ë¹Œë“œ ì„±ê³µ ë©”ì„¸ì§€ ë°œì†¡
  build-success:
    name: Send Build Success Message
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    uses: Ilshidur/action-discord@master
    if: success()
    with:
      format: markdown
      message: |
        Author: ${{github.actor}}
        
        Status: ðŸ˜š **Success**
        
        Commit message: ${{ github.event.commits[0].message }}
        
        [See changes](https://github.com/${{ github.repository }}/commit/${{github.sha}}) 

  # ë¹Œë“œ ì‹¤íŒ¨ ë©”ì„¸ì§€ ë°œì†¡
  build-failure:
    name: Send Build failure Message
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    uses: Ilshidur/action-discord@master
    if: failure()
    with:
      format: markdown
      message: |
        Author: ${{github.actor}}
        
        Status: ðŸ˜± **Failure**
        
        Commit message: ${{ github.event.commits[0].message }}
        
        [link](https://github.com/${{ github.repository }}/actions)
